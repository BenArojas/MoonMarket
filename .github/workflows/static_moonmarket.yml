name: Build and deploy Python app to Azure Web App - MoonMarket

on:
  push:
    branches:
      - deploy
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Set up Node.js for frontend build
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Build frontend
      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build
          cd ..

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      # Move frontend build to backend static
      - name: Move frontend build to backend static
        run: |
          rm -rf backend/static
          mv frontend/dist backend/static

      - name: Create startup script
        run: |
          cd backend
          echo '#!/bin/bash

          # Install Nginx if not already installed
          if ! command -v nginx &> /dev/null; then
              apt-get update
              apt-get install -y nginx
          fi

          # Create required directories
          mkdir -p /home/site/nginx
          mkdir -p /home/site/nginx/conf.d

          # Write Nginx configuration
          cat > /home/site/nginx/nginx.conf << '"'"'NGINX_CONF'"'"'
          worker_processes auto;
          pid /home/site/nginx/nginx.pid;

          events {
              worker_connections 768;
          }

          http {
              access_log /home/site/nginx/access.log;
              error_log /home/site/nginx/error.log;

              include /etc/nginx/mime.types;
              default_type application/octet-stream;

              server {
                  listen ${PORT};
                  server_name ${WEBSITE_HOSTNAME};

                  # Enable compression
                  gzip on;
                  gzip_vary on;
                  gzip_proxied any;
                  gzip_comp_level 6;
                  gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/json application/xml image/svg+xml;

                  # Serve static files
                  location / {
                      root /home/site/wwwroot/static;
                      index index.html;
                      try_files $uri /index.html;
                      
                      # Cache settings for static files
                      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                          expires 1y;
                          add_header Cache-Control "public, no-transform";
                      }
                  }

                  # Proxy API requests to FastAPI
                  location /api/ {
                      proxy_pass http://127.0.0.1:8000;
                      proxy_http_version 1.1;
                      proxy_set_header Upgrade $http_upgrade;
                      proxy_set_header Connection '"'"'upgrade'"'"';
                      proxy_set_header Host $host;
                      proxy_cache_bypass $http_upgrade;
                      proxy_set_header X-Real-IP $remote_addr;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                      proxy_set_header X-Forwarded-Proto $scheme;
                  }
              }
          }
          NGINX_CONF

          # Start Nginx with custom config
          nginx -c /home/site/nginx/nginx.conf -g '"'"'daemon off;'"'"' &

          # Start FastAPI application
          gunicorn -w 2 -k uvicorn.workers.UvicornWorker --forwarded-allow-ips="*" -b 127.0.0.1:8000 main:app' > startup.sh
          
          chmod +x startup.sh

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: backend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_62527B6E372D4C85804221B099EC6A31 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_97EA46326EC340BD8C54632A368E95E6 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_964B617FACCD4E5082B260811D594B63 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'MoonMarket'
          package: .
          slot-name: 'Production'